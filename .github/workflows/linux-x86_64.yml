name: Release extra-users (Linux x86_64)

on:
  push:
    tags:
      - "*"

jobs:
  build-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build on Alpine (musl) without staticx
        run: |
          docker run --rm -v ${PWD}:/workspace -w /workspace alpine:3.19 sh -c "
            apk add --no-cache python3 py3-pip gcc musl-dev linux-headers binutils upx &&
            python3 -m venv venv &&
            source venv/bin/activate &&
            pip install --upgrade pip &&
            pip install pyinstaller &&
            pyinstaller --onefile --strip --name extra-users extra-users.py &&
            upx --best dist/extra-users &&
            chmod 755 dist/extra-users
          "

      - name: Fix permissions and prepare artifact
        run: |
          sudo chown -R $(whoami):$(whoami) dist/ 2>/dev/null || true
          mv dist/extra-users dist/extra-users-linux-x86_64

      - name: Test binary on different distributions
        run: |
          echo "Testing on Alpine Linux (musl):"
          docker run --rm -v ${PWD}/dist:/test alpine:3.19 /test/extra-users-linux-x86_64 --help || echo "Alpine test completed"
          
          echo "Testing on Debian 12 (glibc):"
          docker run --rm -v ${PWD}/dist:/test debian:12 /test/extra-users-linux-x86_64 --help || echo "Debian test completed"

      - name: Verify binary properties
        run: |
          file dist/extra-users-linux-x86_64
          ls -la dist/extra-users-linux-x86_64
          # Kiá»ƒm tra dependencies
          docker run --rm -v ${PWD}/dist:/test alpine:3.19 sh -c "ldd /test/extra-users-linux-x86_64 2>&1 || echo 'Static or musl binary'"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/extra-users-linux-x86_64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}