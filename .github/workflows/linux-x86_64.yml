name: Release extra-users (Linux x86_64)

on:
  push:
    tags:
      - "*"

jobs:
  build-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - name: "alpine-musl"
            container: "alpine:3.19" 
            shell: "sh"
            packages: "python3 py3-pip gcc musl-dev linux-headers patchelf binutils"
            suffix: "alpine"
          - name: "debian-glibc"
            container: "debian:11"
            shell: "bash"
            packages: "python3 python3-pip python3-venv gcc libc6-dev patchelf"
            suffix: "glibc"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build binary for ${{ matrix.name }}
        run: |
          docker run --rm -v ${PWD}:/workspace -w /workspace ${{ matrix.container }} ${{ matrix.shell }} -c "
            if [ '${{ matrix.container }}' = 'debian:11' ]; then
              apt-get update && apt-get install -y ${{ matrix.packages }}
              python3 -m venv venv && source venv/bin/activate
            else
              apk add --no-cache ${{ matrix.packages }}
              python3 -m venv venv && source venv/bin/activate
            fi &&
            pip install --upgrade pip &&
            pip install pyinstaller staticx &&
            pyinstaller --onefile --strip --name extra-users-${{ matrix.suffix }} extra-users.py &&
            staticx dist/extra-users-${{ matrix.suffix }} dist/extra-users-${{ matrix.suffix }}-static &&
            chmod 755 dist/extra-users-${{ matrix.suffix }}-static
          "

      - name: Prepare artifacts
        run: |
          sudo chown -R $(whoami):$(whoami) dist/ 2>/dev/null || true
          mv dist/extra-users-${{ matrix.suffix }}-static dist/extra-users-linux-x86_64-${{ matrix.suffix }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: extra-users-${{ matrix.suffix }}
          path: dist/extra-users-linux-x86_64-${{ matrix.suffix }}

  release:
    needs: build-release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/extra-users-alpine/extra-users-linux-x86_64-alpine
            dist/extra-users-glibc/extra-users-linux-x86_64-glibc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}