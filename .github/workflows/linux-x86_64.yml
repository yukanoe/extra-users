name: Release extra-users (Linux x86_64)

on:
  push:
    tags:
      - "*"

jobs:
  build-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build Alpine version (musl)
        run: |
          echo "🏔️ Building Alpine version (musl)..."
          docker run --rm -v ${PWD}:/workspace -w /workspace alpine:3.19 sh -c "
            apk add --no-cache python3 py3-pip gcc musl-dev linux-headers binutils &&
            python3 -m venv venv &&
            source venv/bin/activate &&
            pip install --upgrade pip pyinstaller &&
            pyinstaller --onefile --strip --name extra-users-alpine extra-users.py &&
            chmod 755 dist/extra-users-alpine
          "

      - name: Build Debian version (glibc)
        run: |
          echo "🐧 Building Debian version (glibc)..."
          docker run --rm -v ${PWD}:/workspace -w /workspace debian:11 bash -c "
            apt-get update &&
            apt-get install -y python3 python3-pip python3-venv gcc libc6-dev &&
            python3 -m venv venv &&
            source venv/bin/activate &&
            pip install --upgrade pip pyinstaller &&
            pyinstaller --onefile --strip --name extra-users-glibc extra-users.py &&
            chmod 755 dist/extra-users-glibc
          "

      - name: Fix permissions
        run: |
          sudo chown -R $(whoami):$(whoami) dist/ 2>/dev/null || true

      - name: Test Alpine binary
        run: |
          echo ""
          echo "🧪 Testing Alpine binary (musl)..."
          echo "✅ On Alpine:"
          docker run --rm -v ${PWD}/dist:/test alpine:3.19 /test/extra-users-alpine --help | head -3
          echo "❓ On Debian:"
          docker run --rm -v ${PWD}/dist:/test debian:12 /test/extra-users-alpine --help 2>&1 | head -3 || echo "Failed as expected"

      - name: Test Debian binary
        run: |
          echo ""
          echo "🧪 Testing Debian binary (glibc)..."  
          echo "✅ On Debian:"
          docker run --rm -v ${PWD}/dist:/test debian:12 /test/extra-users-glibc --help | head -3
          echo "✅ On Ubuntu:"
          docker run --rm -v ${PWD}/dist:/test ubuntu:22.04 /test/extra-users-glibc --help | head -3
          echo "❓ On Alpine:"
          docker run --rm -v ${PWD}/dist:/test alpine:3.19 /test/extra-users-glibc --help 2>&1 | head -3 || echo "Failed as expected"

      - name: Prepare artifacts
        run: |
          mv dist/extra-users-alpine dist/extra-users-linux-x86_64-alpine
          mv dist/extra-users-glibc dist/extra-users-linux-x86_64-glibc
          
          echo ""
          echo "📦 Final artifacts:"
          ls -lh dist/extra-users-linux-x86_64-*

      - name: Build summary
        run: |
          echo ""
          echo "========================================="
          echo "✅ BUILD SUMMARY"
          echo "========================================="
          echo "🏔️  Alpine binary: extra-users-linux-x86_64-alpine"
          echo "   └─ Works on: Alpine Linux"
          echo "   └─ Size: $(ls -lh dist/extra-users-linux-x86_64-alpine | awk '{print $5}')"
          echo ""
          echo "🐧 Debian binary: extra-users-linux-x86_64-glibc"  
          echo "   └─ Works on: Debian, Ubuntu, most glibc systems"
          echo "   └─ Size: $(ls -lh dist/extra-users-linux-x86_64-glibc | awk '{print $5}')"
          echo "========================================="

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/extra-users-linux-x86_64-alpine
            dist/extra-users-linux-x86_64-glibc
          body: |
            ## Linux x86_64 Binaries
            
            **🏔️ Alpine Version (`extra-users-linux-x86_64-alpine`)**
            - Built on Alpine Linux with musl libc
            - Best for: Alpine Linux, Docker alpine images
            - Size: Smaller, optimized for Alpine
            
            **🐧 glibc Version (`extra-users-linux-x86_64-glibc`)**  
            - Built on Debian 11 with glibc
            - Best for: Debian, Ubuntu, CentOS, RHEL, most Linux distributions
            - Size: Slightly larger, broader compatibility
            
            Choose the version that matches your target system!
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}